/// <reference types="googletag" />
import { DoCheck, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
import { DfpService } from './dfp.service';
import { DfpAd } from './types';
import * as i0 from "@angular/core";
export declare class DfpAdDirective implements DoCheck, OnChanges, OnDestroy {
    private viewContainer;
    private templateRef;
    private dfp;
    private router;
    private $destroy;
    private $update;
    private element?;
    private slot?;
    set dfpAd(dfpAd: string | DfpAd);
    unitPath: string;
    id?: string;
    size?: googletag.GeneralSize;
    sizeMapping?: googletag.SizeMappingArray;
    categoryExclusion?: string | string[];
    clickUrl?: string;
    collapseEmptyDiv?: boolean | [boolean, boolean];
    forceSafeFrame?: boolean;
    safeFrameConfig?: googletag.SafeFrameConfig;
    targeting?: Record<string, string | string[]>;
    adsense?: Record<string, string>;
    content?: string;
    constructor(viewContainer: ViewContainerRef, templateRef: TemplateRef<unknown>, dfp: DfpService, router: Router, platformId: Object);
    private init;
    create(): void;
    display(): void;
    clear(): void;
    destroy(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DfpAdDirective, [null, null, null, { optional: true; }, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DfpAdDirective, "[dfpAd]", never, { "dfpAd": "dfpAd"; "id": "dfpAdId"; "size": "dfpAdSize"; "sizeMapping": "dfpAdSizeMapping"; "categoryExclusion": "dfpAdCategoryExclusion"; "clickUrl": "dfpAdClickUrl"; "collapseEmptyDiv": "dfpAdCollapseEmptyDiv"; "forceSafeFrame": "dfpAdForceSafeFrame"; "safeFrameConfig": "dfpAdSafeFrameConfig"; "targeting": "dfpAdTargeting"; "adsense": "dfpAdAdsense"; "content": "dfpAdContent"; }, {}, never>;
}
