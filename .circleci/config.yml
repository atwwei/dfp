# Configuring CircleCIï¼šhttps://circleci.com/docs/2.0/configuration-reference/
version: 2.1

orbs:
  node: circleci/node@4.7.0
  browser-tools: circleci/browser-tools@1.2.2
  coveralls: coveralls/coveralls@1.0.6
  github-cli: circleci/github-cli@1.0.4

executors:
  docker:
    docker:
      - image: cimg/node:12.19-browsers

jobs:
  build:
    executor: docker
    steps:
      - checkout
      - node/install-packages
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: User identity
          command: |
            git config --global user.email "atwwei@gmail.com"
            git config --global user.name "circleci"
            git remote set-url origin https://$GITHUB_TOKEN@github.com/atwwei/dfp
            echo //registry.npmjs.org/:_authToken=$NPM_TOKEN >> ~/.npmrc
      - run:
          name: Run prettier
          command: npm run prettier
      - run:
          name: Run eslint
          command: npm run lint
      - run:
          name: Run karma
          command: npm run test
      - run:
          name: Run publish test
          command: |
            npm run build

            config=./dist/package.json
            name=`grep -o -m 1 'name.*' $config | awk 'BEGIN{FS="\""} {print $3}'`
            version=`grep -o -m 1 'version.*' $config | awk 'BEGIN{FS="\""} {print $3}'`

            echo -e "\nAdd git tag v$version"
            git tag -a v$version -m "Publish $name@$version"

            echo -e "\nDry run npm publish"
            npm publish ./dist --access public --dry-run
      - when:
          condition:
            matches:
              pattern: ^(main|v\d+-lts)$
              value: << pipeline.git.branch >>
          steps:
            - run:
                name: Run publish
                command: |
                  if [[ $CIRCLE_BRANCH = "main" ]]; then
                    npm publish ./dist --access public
                  else
                    npm publish ./dist --access public --tag $CIRCLE_BRANCH
                  fi
                  git push --tags
            - coveralls/upload
      - store_test_results:
          path: reports
      - store_artifacts:
          path: dist
      - store_artifacts:
          path: coverage
workflows:
  dfp:
    jobs:
      - build
